{"version":3,"sources":["components/DataRow.js","components/TableHeader.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["DataRow","props","emailList","data","split","map","email","className","type","title","onClick","updatedData","allData","d","key","currEmailList","filter","join","updateData","removeEmailHere","remCounter","isChecked","logicalTest","toUpperCase","alert","removeEmailAll","faxList","fax","currFaxList","removeFaxHere","tiitle","removeFaxAll","checked","onChange","toggledData","STUB","Regn","Level","ID","REGIONLEVELS","DBOF","DBAO","DBAR","DBJH","DBMM","REGIONS","Object","keys","firstLoad","TableHeader","useState","accNumber","setAccNumber","emailAddress","setEmaiAddress","faxNumber","setFaxNumber","accNumberAlert","setAccNumberAlert","newRegion","newData","lvl","addKeyCheck","regionChanged","e","target","value","validateAccNo","anum","regMatch","exec","length","regionSelect","selOpt","v","makeRegionSelect","tableHeader","scope","globalCheck","toggleSelected","onSubmit","preventDefault","emadd","regEx","validateEmailAddress","find","updatedEmailList","trim","updatedFaxList","Table","setGlobalCheck","dataRows","setDataRows","dataRowsJSX","assign","nanoid","FILTER_MAP","All","Active","task","completed","Completed","buffer","bufferHistory","App","setData","csvData","setCsvData","csvParse","text","csvParser","dsvFormat","endsWith","slice","parse","file","a","reader","FileReader","onload","pe","result","readAsText","id","role","readTxtFile","files","then","console","log","filterFun","csvContent","emails","faxes","f","push","document","getElementById","select","execCommand","pop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.70e74921.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n// <DataRow data={d} allData={ dataRows } updateData={ setDataRows } />\n\nexport default function DataRow(props) {\n\n  //console.log(\"Row: \")\n  //console.log(props.allData);\n\n  function removeEmailHere(email) {\n    const updatedData = props.allData.map( d => {\n      if (d.key === props.data.key) {\n        const currEmailList = d['Mail List'].split(',').filter( d => d !== email );\n        return {...d, 'Mail List': currEmailList.join(',')};\n      } else {\n        return d;\n      }\n    });\n    props.updateData(updatedData);\n  }\n\n  function removeFaxHere(fax) {\n    const updatedData = props.allData.map( d => {\n      if (d.key === props.data.key) {\n        const currFaxList = d['Fax List'].split(',').filter( d => d !== fax );\n        return {...d, 'Fax List': currFaxList.join(',')};\n      } else {\n        return d;\n      }\n    });\n    props.updateData(updatedData);\n  }\n\n  function removeEmailAll(email) {\n    let remCounter = 0; //count removed email addresses\n    const updatedData = props.allData.map( d => {\n      if (d.isChecked === true) {\n        const currEmailList = d['Mail List'].split(',').filter( d => {\n          let logicalTest = d.toUpperCase() !== email.toUpperCase();\n          remCounter=logicalTest?remCounter:remCounter+1;\n          return logicalTest; \n        });\n        return {...d, 'Mail List': currEmailList.join(',')};\n      } else {\n        return d;\n      }\n    });\n    props.updateData(updatedData);\n    alert(`Removed ${remCounter} email address${remCounter!==1?'es':''}`)\n  }\n\n  function removeFaxAll(fax) {\n    let remCounter = 0; //count removed fax numbers\n    const updatedData = props.allData.map( d => {\n      if (d.isChecked === true) {\n        const currFaxList = d['Fax List'].split(',').filter( d => {\n          let logicalTest = d !== fax;\n          remCounter=logicalTest?remCounter:remCounter+1;\n          return logicalTest;\n        });\n        return {...d, 'Fax List': currFaxList.join(',')};\n      } else {\n        return d;\n      }\n    });\n    props.updateData(updatedData);\n    alert(`Removed ${remCounter} fax number${remCounter!==1?'s':''}`)\n  }\n\n\n  const emailList = props.data['Mail List'] && props.data['Mail List'].split(',').map( email => {\n    if (email) {\n      return (\n        <li className=\"list-group-item\">\n          <div className=\"d-flex justify-content-end\">\n            {email}\n            <button type=\"button\" className=\"btn btn-sm btn-outline-danger mx-2\" title=\"Remove Here\" onClick={ () => removeEmailHere(email) }>\n              <i className=\"bi-check\" />\n            </button>\n            <button type=\"button\" className=\"btn btn-sm btn-danger\" title=\"Remove in selected\" onClick={ () => removeEmailAll(email) }>\n              <i className=\"bi-check-all\" />\n            </button>\n          </div>\n        </li>\n      )}});\n\n  const faxList = props.data['Fax List'] && props.data['Fax List'].split(',').map( fax => {\n    if (fax) {\n      return (\n        <li className=\"list-group-item\">\n          <div className=\"d-flex justify-content-end\">\n            {fax}\n            <button type=\"button\" className=\"btn btn-sm btn-outline-danger mx-2\" title=\"Remove Here\" onClick={ () => removeFaxHere(fax) }>\n              <i className=\"bi-check\" />\n            </button>\n            <button type=\"button\" className=\"btn btn-sm btn-danger\" tiitle=\"Remove in selected\" onClick={ () => removeFaxAll(fax) }>\n              <i className=\"bi-check-all\" />\n            </button>\n          </div>\n        </li>\n      )}});\n\n  function toggleCheckbox() {\n    let toggledData = props.allData.map( d => {\n      if (d.key === props.data.key ) {\n        return { ...d, isChecked: !d.isChecked };\n      }\n      return d;\n    });\n    props.updateData(toggledData);\n    props.data.isChecked = !props.data.isChecked;\n  }\n\n  return(\n    <tr key={props.data.key}>\n      <td>\n        <input \n          className=\"form-check form-check-input\" \n          type=\"checkbox\" \n          checked={ props.data.isChecked }\n          onChange={ toggleCheckbox }\n        />\n      </td>\n      <td>{ props.data['Regn'] }</td>\n      <td>{ props.data['Level'] }</td>\n      <td>{ props.data['ID'] }</td>\n      <td>{ props.data['Linked report'] }</td>\n      <td><ul className=\"list-group\"> { emailList } </ul></td>\n      <td><ul className=\"list-group\"> { faxList } </ul></td>\n    </tr>\n  );\n}","import React, { useState } from 'react';\nimport { addKeyCheck } from './Table';\n\nconst STUB = {\n  //region: '', code: 'CLT', level: '', accnumber: '', email: '', fax: ''\n  Regn: '', Level: 'CLI', ID: '', 'Linked report': '', 'Mail List': '', 'Fax List': ''\n};\n\nconst REGIONLEVELS = {\n  DBOF: [\"\", \"PERIOSTD-DBOF\"],\n  DBAO: [\"\", \"DBAO-Contract-Note\", \"DBAO-Contract-Note-Transfer\"],\n  DBAR: [\"\", \"DBAR-Contract-Note\", \"DBAR-Contract-Note-Transfer\"],\n  DBJH: [\"\", \"dbjh-confirm-1\", \"dbjh-confirm-2\", \"dbjh-confirm-AD\", \"dbjh-confirm-t\", \n         \"DBJH-contract-note\", \"DBJH-Contract-Note-Transfer\", \"djallcch\", \"doallcch\", \n         \"ICTA-MRG-LU238\", \"ICTA-MRG-LU348\", \"ICTA-MRG-LU349\", \"PERIOSTD-DBJH\"],\n  DBMM: [\"\", \"DBMM-Contract-Note\", \"DBMM-Contract-Note-Transfer\"]\n}\n\nconst REGIONS = Object.keys(REGIONLEVELS);\n\nlet firstLoad = true;\n/*\n<TableHeader \n  globalCheck={globalCheck} toggleSelected={ toggleSelected }\n  allData={ dataRows } updateData={ setDataRows }\n/>\n*/\n\nexport default function TableHeader(props) {\n  const [ accNumber, setAccNumber ] = useState('');\n  const [ emailAddress, setEmaiAddress ] = useState('');\n  const [ faxNumber, setFaxNumber ] = useState('');\n  const [ accNumberAlert, setAccNumberAlert ] = useState(\"alert-danger\");\n\n  //select in the header\n  function makeRegionSelect() {\n    const selOpt = REGIONS.map( v => (\n      <option value={v}>{v}</option>\n    ));\n    return(\n      <select className=\"form-select form-select-sm\" onChange={ regionChanged }>\n        {selOpt}\n      </select>\n    )\n  }\n\n  // start with the first region\n  if (firstLoad) {\n    firstLoad = false;\n    const newRegion = REGIONS[0];\n    let newData = REGIONLEVELS[newRegion].map( lvl => {\n      return {...STUB, 'Regn': newRegion, 'Linked report': lvl}\n    });\n    props.updateData(addKeyCheck(newData));\n  }\n\n  function regionChanged(e) {\n    const newRegion = e.target.value;\n    let newData = REGIONLEVELS[newRegion].map( lvl => {\n      return {...STUB, 'Regn': newRegion, 'Linked report': lvl}\n    });\n    //console.log(newRegion);\n    props.updateData(addKeyCheck(newData));\n  }\n\n  function updateAccNo(e) {\n    setAccNumber(e.target.value);\n    validateAccNo(e.target.value);\n  }\n\n  function changeAccNo(e) {\n    e.preventDefault();\n    if (validateAccNo(accNumber) && props.allData) {\n      const updatedData = props.allData.map( d => {\n        return d.isChecked?{...d, 'ID': accNumber.toUpperCase()}:d;\n      });\n      props.updateData(updatedData);\n    } else {\n      alert(\"Invalid account number\");\n    };\n  }\n\n  function validateAccNo(anum) {\n    let regMatch = /[a-z0-9]{3}\\d{7}/gmi.exec(anum);\n    if ((anum && anum.length==10) && (regMatch && regMatch.length > 0)) {\n      setAccNumberAlert(\"alert-success\");\n      return true;\n    }\n    setAccNumberAlert(\"alert-danger\");\n    return false; \n  }\n\n  function validateEmailAddress(emadd) {\n    //const regMatch = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/g;\n    const regMatch = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/gm\n    let regEx = regMatch.exec(emadd);\n    if(regEx && regEx.length > 0) {\n      return true;\n    } \n      return false;\n  }\n\n  function updateCurrentEmail(e) {\n    setEmaiAddress(e.target.value.trim());\n  }\n  function addEmail(e) {\n    e.preventDefault();\n    const updatedData = props.allData.map( d => {\n      if (d.isChecked && validateEmailAddress(emailAddress)) {\n        let previousEmailList = d['Mail List'].split(\",\");\n        if (!previousEmailList.find(e => e.toUpperCase() === emailAddress.toUpperCase() )) {\n          let updatedEmailList = [d['Mail List'].split(\",\"), emailAddress].join(',');\n          //console.log(updatedEmailList);\n          return {...d, 'Mail List': updatedEmailList };\n        }\n      }\n      return d;\n    });\n    //console.log(updatedData);\n    props.updateData(updatedData);\n  }\n\n  function updateCurrentFax(e) {\n    setFaxNumber(e.target.value.trim());\n  }\n\n  function addFax(e) {\n    e.preventDefault();\n    const updatedData = props.allData.map( d => {\n      if (d.isChecked) {\n        let previousFaxList = d['Fax List'].split(\",\");\n        if (!previousFaxList.find(e => e === faxNumber )) {\n          let updatedFaxList = [d['Fax List'].split(\",\"), faxNumber].join(',');\n          //console.log(updatedEmailList);\n          return {...d, 'Fax List': updatedFaxList };\n        }\n      }\n      return d;\n    });\n    //console.log(updatedData);\n    props.updateData(updatedData);\n  }\n\n  const regionSelect = makeRegionSelect();\n\n  const tableHeader = (\n    <tr>\n      <th scope=\"col\">\n        <input \n          className=\"form-check form-check-input\" \n          type=\"checkbox\" checked={!props.globalCheck} \n          onClick={props.toggleSelected}\n        />\n      </th>\n      <th scope=\"col\">{ regionSelect }</th>\n      <th scope=\"col\">Level</th>\n      <th scope=\"col\">\n        <form onSubmit={ changeAccNo }>\n          <input type=\"search\" onChange={ updateAccNo } />\n          <button type=\"submit\" className={ accNumberAlert }>change</button>\n        </form>\n      </th>\n      <th scope=\"col\">Linked report</th>\n      <th scope=\"col\">\n        <form onSubmit={ addEmail }>\n          <input type=\"search\" onChange={ updateCurrentEmail }/>\n          <button type=\"submit\">add</button>\n        </form>\n      </th>\n      <th scope=\"col\">\n        <form onSubmit={ addFax }>\n          <input type=\"search\" onChange={ updateCurrentFax }/>\n          <button type=\"submit\">add</button>\n        </form>\n      </th>\n    </tr>\n  );\n\n\n  return(\n    <thead>\n      { tableHeader }\n    </thead>\n  );\n}","import React, { useState } from 'react';\nimport DataRow from './DataRow';\nimport TableHeader from './TableHeader';\nimport { nanoid } from 'nanoid';\n\n\nexport default function Table(props) {\n  const [globalCheck, setGlobalCheck] = useState(false);\n\n  const dataRows = props.data;\n  \n  function setDataRows(data) {\n    props.updateData(data);\n  }\n\n  //const [dataRows, setDataRows] = useState(props.data?props.data:addKeyCheck(SAMPLEDATA));\n\n  const dataRowsJSX = dataRows && dataRows.map( d => (\n    <DataRow data={d} allData={ dataRows } updateData={ setDataRows } />\n  ));\n\n  //let headerList = Object.keys(dataRows[0]).filter(cname => cname!==\"key\"); //[\"#\", \"First Name\", \"Second Name\"];\n  //headerList = ['checkboxes', ...headerList];\n\n  function toggleSelected() {\n    setGlobalCheck(!globalCheck);\n    setDataRows(dataRows.map( d => { return Object.assign(d, {isChecked: globalCheck})}));\n    //console.log(dataRows[0]);\n  }\n\n  return (\n    <table className=\"table table-sm table-success table-hover table-striped\">\n      <TableHeader \n        globalCheck={globalCheck} toggleSelected={ toggleSelected }\n        allData={ dataRows } updateData={ setDataRows }\n      />\n      <tbody>{ dataRowsJSX }</tbody>\n    </table>\n  );\n}\n\nexport function addKeyCheck(data) {\n  return data.map(d => Object.assign({key: nanoid(), isChecked: true}, d));\n}","import { useState } from 'react';\nimport Table, { addKeyCheck } from './components/Table';\nimport { dsvFormat } from 'd3';\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nvar buffer = [];\nvar bufferHistory = [];\n\nfunction App(props) {\n  const [data, setData] = useState(props.data?addKeyCheck(props.data):null);\n  const [csvData, setCsvData] = useState('');\n  const [filter, setFilter] = useState(\"All\");\n\n  function csvParse(text) {\n    const csvParser = dsvFormat(\";\");\n    text = text.endsWith('\\n')?text.slice(0, text.length-1):text;\n    return csvParser.parse(text);\n  }\n\n  function handleFileChange(e) {\n    readTxtFile(e.target.files[0]).then( d => console.log(d));\n    //console.log();\n  }\n\n  async function readTxtFile(file) {\n    const reader = new FileReader();\n    reader.onload =  pe => {\n      setData(addKeyCheck(csvParse(pe.target.result)));\n    }\n    reader.readAsText(file);\n  }\n\n  function generateCsv() {\n    //console.log(\"genearting csv\");\n    //const headerNames = 'region,code,level,account,email,fax';\n    let csvContent = data.filter(d => d.isChecked).filter(d => d['Mail List'].length>0 || d['Fax List'].length>0).map( d => {\n      let emails = d['Mail List'].split(',').filter(e => e && e.length>0).join(',');\n      let faxes = d['Fax List'].split(',').filter(f => f && f.length>0).join('#');\n      //console.log(d.fax);\n      return [d['Regn'], d['Level'], d['ID'], d['Linked report'], `${emails}`, `${faxes}`].join(';');\n    });\n\n    //csvContent = [headerNames, ...csvContent].join('\\n');\n\n    buffer.push(csvContent.join('\\r\\n'))\n\n    setCsvData(buffer.join('\\r\\n')+'\\r\\n');\n  }\n\n  function clearCsv() {\n    if (buffer.length>0) {\n      bufferHistory.push([...buffer]);\n    }\n    buffer = [];\n    setCsvData(\"\");\n  }\n\n  function copyToClipboard() {\n    var copyText = document.getElementById(\"csvTextArea\");\n    copyText.select();\n    document.execCommand(\"copy\");\n    alert(`Text copied to the clipboard: ${csvData.length} characters.`);\n  }\n\n  function undoCsv() {\n    if (buffer.length>0) {\n      buffer.pop()\n    } else if (bufferHistory.length>0) {\n      buffer = bufferHistory.pop()\n    } else {\n      buffer = [];\n    }\n    setCsvData(buffer.length>0?buffer.join('\\r\\n')+'\\r\\n':'');\n  }\n\n  return (\n    <div className=\"tab-content\">\n      <div className=\"tab-pane fade show active\" id=\"main\" role=\"tabpanel\">\n        <div className=\"table-responsive\">\n          <input type=\"file\" onChange={handleFileChange} />\n          <Table data={ data } updateData={ setData } filterFun={ FILTER_MAP[filter] }/>\n        </div>\n        <hr /><b>Pawel Piela</b> pawel.piela@rbc.com\n      </div>\n      <div className=\"tab-pane fade show\" id=\"csv\" role=\"tabpanel\">\n        <div className=\"container\">\n          <div className=\"row mt-3\">\n            <div className=\"col-auto me-auto\">\n              <button className=\"btn btn-sm btn-primary\" onClick={ generateCsv }>Generate content of the load file</button>\n              <button className=\"btn btn-sm btn-secondary mx-2\" onClick={ copyToClipboard }>Copy to clipboard</button>\n            </div>\n            <div className=\"col-auto\">\n              <button className=\"btn btn-sm btn-danger mx-2\" onClick={ clearCsv }>Clear</button>\n              <button className=\"btn btn-sm btn-outline-danger\" onClick={ undoCsv }>Undo</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div id=\"csvText\">\n            <textarea id=\"csvTextArea\" value={ csvData } />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst SAMPLEDATA = [\n  {region: 'DBOF', code: 'CLT', level: '', accnumber: 'FUS0000001', email: \"email1@a.ie,email2@a.ie\", fax: '123'},\n  {region: 'DBOF', code: 'CLT', level: 'CONTRACT-NOTES', accnumber: 'FUS0000001', email: \"email1@a.ie,email2@a.ie\", fax: ''}\n]\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App data={ null }/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}